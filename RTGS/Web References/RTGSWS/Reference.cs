//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RTGS.RTGSWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsAddressAvaiableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostOutwardTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostInwardTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::RTGS.Properties.Settings.Default.RTGS_RTGSWS_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsAddressAvaiableCompletedEventHandler IsAddressAvaiableCompleted;
        
        /// <remarks/>
        public event GetAccountInfoCompletedEventHandler GetAccountInfoCompleted;
        
        /// <remarks/>
        public event PostOutwardTransactionCompletedEventHandler PostOutwardTransactionCompleted;
        
        /// <remarks/>
        public event PostInwardTransactionCompletedEventHandler PostInwardTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAddressAvaiable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectionResult IsAddressAvaiable(string serviceName) {
            object[] results = this.Invoke("IsAddressAvaiable", new object[] {
                        serviceName});
            return ((ConnectionResult)(results[0]));
        }
        
        /// <remarks/>
        public void IsAddressAvaiableAsync(string serviceName) {
            this.IsAddressAvaiableAsync(serviceName, null);
        }
        
        /// <remarks/>
        public void IsAddressAvaiableAsync(string serviceName, object userState) {
            if ((this.IsAddressAvaiableOperationCompleted == null)) {
                this.IsAddressAvaiableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAddressAvaiableOperationCompleted);
            }
            this.InvokeAsync("IsAddressAvaiable", new object[] {
                        serviceName}, this.IsAddressAvaiableOperationCompleted, userState);
        }
        
        private void OnIsAddressAvaiableOperationCompleted(object arg) {
            if ((this.IsAddressAvaiableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAddressAvaiableCompleted(this, new IsAddressAvaiableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccountInfo GetAccountInfo(string AccountNo) {
            object[] results = this.Invoke("GetAccountInfo", new object[] {
                        AccountNo});
            return ((AccountInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string AccountNo) {
            this.GetAccountInfoAsync(AccountNo, null);
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string AccountNo, object userState) {
            if ((this.GetAccountInfoOperationCompleted == null)) {
                this.GetAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountInfo", new object[] {
                        AccountNo}, this.GetAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountInfoOperationCompleted(object arg) {
            if ((this.GetAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostOutwardTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostOutwardTransaction(string FLoraID, string ValueDate, string Amount, string Currency, string Account, string Status, string Type, string ReturnCode, string OldT24TxnID, string BranchCode) {
            object[] results = this.Invoke("PostOutwardTransaction", new object[] {
                        FLoraID,
                        ValueDate,
                        Amount,
                        Currency,
                        Account,
                        Status,
                        Type,
                        ReturnCode,
                        OldT24TxnID,
                        BranchCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostOutwardTransactionAsync(string FLoraID, string ValueDate, string Amount, string Currency, string Account, string Status, string Type, string ReturnCode, string OldT24TxnID, string BranchCode) {
            this.PostOutwardTransactionAsync(FLoraID, ValueDate, Amount, Currency, Account, Status, Type, ReturnCode, OldT24TxnID, BranchCode, null);
        }
        
        /// <remarks/>
        public void PostOutwardTransactionAsync(string FLoraID, string ValueDate, string Amount, string Currency, string Account, string Status, string Type, string ReturnCode, string OldT24TxnID, string BranchCode, object userState) {
            if ((this.PostOutwardTransactionOperationCompleted == null)) {
                this.PostOutwardTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostOutwardTransactionOperationCompleted);
            }
            this.InvokeAsync("PostOutwardTransaction", new object[] {
                        FLoraID,
                        ValueDate,
                        Amount,
                        Currency,
                        Account,
                        Status,
                        Type,
                        ReturnCode,
                        OldT24TxnID,
                        BranchCode}, this.PostOutwardTransactionOperationCompleted, userState);
        }
        
        private void OnPostOutwardTransactionOperationCompleted(object arg) {
            if ((this.PostOutwardTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostOutwardTransactionCompleted(this, new PostOutwardTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostInwardTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostInwardTransaction(string FloraID, string ValueDate, string Amount, string Currency, string Account, string Status, string Type, string ReturnCode, string OldT24TxnID, string BranchCode) {
            object[] results = this.Invoke("PostInwardTransaction", new object[] {
                        FloraID,
                        ValueDate,
                        Amount,
                        Currency,
                        Account,
                        Status,
                        Type,
                        ReturnCode,
                        OldT24TxnID,
                        BranchCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostInwardTransactionAsync(string FloraID, string ValueDate, string Amount, string Currency, string Account, string Status, string Type, string ReturnCode, string OldT24TxnID, string BranchCode) {
            this.PostInwardTransactionAsync(FloraID, ValueDate, Amount, Currency, Account, Status, Type, ReturnCode, OldT24TxnID, BranchCode, null);
        }
        
        /// <remarks/>
        public void PostInwardTransactionAsync(string FloraID, string ValueDate, string Amount, string Currency, string Account, string Status, string Type, string ReturnCode, string OldT24TxnID, string BranchCode, object userState) {
            if ((this.PostInwardTransactionOperationCompleted == null)) {
                this.PostInwardTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostInwardTransactionOperationCompleted);
            }
            this.InvokeAsync("PostInwardTransaction", new object[] {
                        FloraID,
                        ValueDate,
                        Amount,
                        Currency,
                        Account,
                        Status,
                        Type,
                        ReturnCode,
                        OldT24TxnID,
                        BranchCode}, this.PostInwardTransactionOperationCompleted, userState);
        }
        
        private void OnPostInwardTransactionOperationCompleted(object arg) {
            if ((this.PostInwardTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostInwardTransactionCompleted(this, new PostInwardTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConnectionResult {
        
        private bool connectedField;
        
        private string errMsgField;
        
        /// <remarks/>
        public bool Connected {
            get {
                return this.connectedField;
            }
            set {
                this.connectedField = value;
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                return this.errMsgField;
            }
            set {
                this.errMsgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AccountInfo {
        
        private string accountNoField;
        
        private string workingBalanceField;
        
        private string currencyField;
        
        private string branchCodeField;
        
        private string activeInactiveField;
        
        private string accountPostingRestrictField;
        
        private string customerPostingRestrictField;
        
        private string errorMsgField;
        
        private string accountTileField;
        
        /// <remarks/>
        public string AccountNo {
            get {
                return this.accountNoField;
            }
            set {
                this.accountNoField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingBalance {
            get {
                return this.workingBalanceField;
            }
            set {
                this.workingBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ActiveInactive {
            get {
                return this.activeInactiveField;
            }
            set {
                this.activeInactiveField = value;
            }
        }
        
        /// <remarks/>
        public string AccountPostingRestrict {
            get {
                return this.accountPostingRestrictField;
            }
            set {
                this.accountPostingRestrictField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerPostingRestrict {
            get {
                return this.customerPostingRestrictField;
            }
            set {
                this.customerPostingRestrictField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTile {
            get {
                return this.accountTileField;
            }
            set {
                this.accountTileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsAddressAvaiableCompletedEventHandler(object sender, IsAddressAvaiableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAddressAvaiableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAddressAvaiableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConnectionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConnectionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAccountInfoCompletedEventHandler(object sender, GetAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PostOutwardTransactionCompletedEventHandler(object sender, PostOutwardTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostOutwardTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostOutwardTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PostInwardTransactionCompletedEventHandler(object sender, PostInwardTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostInwardTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostInwardTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591